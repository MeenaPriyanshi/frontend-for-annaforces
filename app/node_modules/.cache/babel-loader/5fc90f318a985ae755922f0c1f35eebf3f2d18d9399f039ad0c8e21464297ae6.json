{"ast":null,"code":"var _jsxFileName = \"E:\\\\NEW\\\\frontend-for-annaforces\\\\app\\\\src\\\\components\\\\UserSubmissions\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserSubmissions({\n  token\n}) {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [submissions, setSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/users/${userId}/submissions`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSubmissions(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (userId && token) {\n      fetchSubmissions();\n    }\n  }, [userId, token]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading submissions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  if (submissions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No submissions found for this user.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-submissions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Submissions for User: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: submissions.map(submission => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Submission ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 16\n          }, this), \" \", submission.submission_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Problem ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 16\n          }, this), \" \", submission.problem_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }, this), \" \", submission.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 16\n          }, this), \" \", submission.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }, this), \" \", new Date(submission.timestamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), submission.test_results && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Test Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), \" \", submission.test_results.filter(tr => tr.status === 'passed').length, \" / \", submission.test_results.length, \" passed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, submission.submission_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(UserSubmissions, \"ZWBFDbn0MY8MnW9mVV+wnCeOuH0=\", false, function () {\n  return [useParams];\n});\n_c = UserSubmissions;\nexport default UserSubmissions;\nvar _c;\n$RefreshReg$(_c, \"UserSubmissions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","UserSubmissions","token","_s","userId","submissions","setSubmissions","loading","setLoading","error","setError","fetchSubmissions","response","fetch","headers","ok","Error","status","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","className","map","submission","submission_id","problem_id","language","Date","timestamp","toLocaleString","test_results","filter","tr","_c","$RefreshReg$"],"sources":["E:/NEW/frontend-for-annaforces/app/src/components/UserSubmissions/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction UserSubmissions({ token }) {\n  const { userId } = useParams();\n  const [submissions, setSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/users/${userId}/submissions`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSubmissions(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (userId && token) {\n      fetchSubmissions();\n    }\n  }, [userId, token]);\n\n  if (loading) {\n    return <div>Loading submissions...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  if (submissions.length === 0) {\n    return <div>No submissions found for this user.</div>;\n  }\n\n  return (\n    <div className=\"user-submissions-container\">\n      <h2>Submissions for User: {userId}</h2>\n      <ul>\n        {submissions.map(submission => (\n          <li key={submission.submission_id}>\n            <p><strong>Submission ID:</strong> {submission.submission_id}</p>\n            <p><strong>Problem ID:</strong> {submission.problem_id}</p>\n            <p><strong>Status:</strong> {submission.status}</p>\n            <p><strong>Language:</strong> {submission.language}</p>\n            <p><strong>Timestamp:</strong> {new Date(submission.timestamp).toLocaleString()}</p>\n            {submission.test_results && (\n              <p>\n                <strong>Test Results:</strong> {submission.test_results.filter(tr => tr.status === 'passed').length} / {submission.test_results.length} passed\n              </p>\n            )}\n            {/* Add more submission details as needed */}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default UserSubmissions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}