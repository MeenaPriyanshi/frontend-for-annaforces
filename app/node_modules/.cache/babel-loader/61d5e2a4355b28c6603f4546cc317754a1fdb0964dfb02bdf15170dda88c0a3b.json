{"ast":null,"code":"var _jsxFileName = \"E:\\\\NEW\\\\frontend-for-annaforces\\\\app\\\\src\\\\components\\\\ProblemSubmissions\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProblemSubmissions({\n  token\n}) {\n  _s();\n  const {\n    problemId\n  } = useParams();\n  const [allSubmissions, setAllSubmissions] = useState([]); // Store all fetched submissions\n  const [submissions, setSubmissions] = useState([]); // Submissions to display after filtering\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterUserId, setFilterUserId] = useState('');\n  const [filterStatus, setFilterStatus] = useState('');\n  const [filterStartDate, setFilterStartDate] = useState('');\n  const [filterEndDate, setFilterEndDate] = useState('');\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/problems/${problemId}/submissions`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAllSubmissions(data); // Store all submissions\n        setSubmissions(data); // Initially display all submissions\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (problemId && token) {\n      fetchSubmissions();\n    }\n  }, [problemId, token]);\n  useEffect(() => {\n    let filtered = allSubmissions;\n    if (filterUserId) {\n      filtered = filtered.filter(submission => submission.user_id.toLowerCase().includes(filterUserId.toLowerCase()));\n    }\n    if (filterStatus) {\n      filtered = filtered.filter(submission => submission.status.toLowerCase() === filterStatus.toLowerCase());\n    }\n    if (filterStartDate) {\n      const start = new Date(filterStartDate).getTime();\n      filtered = filtered.filter(submission => new Date(submission.timestamp).getTime() >= start);\n    }\n    if (filterEndDate) {\n      const end = new Date(filterEndDate).getTime();\n      filtered = filtered.filter(submission => new Date(submission.timestamp).getTime() <= end);\n    }\n    setSubmissions(filtered);\n  }, [allSubmissions, filterUserId, filterStatus, filterStartDate, filterEndDate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading submissions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  if (submissions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No submissions found for this problem.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem-submissions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Submissions for Problem: \", problemId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: submissions.map(submission => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/submissions/${submission.submission_id}`,\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Submission ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 18\n            }, this), \" \", submission.submission_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"User ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 18\n            }, this), \" \", submission.user_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 18\n            }, this), \" \", submission.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Timestamp:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 18\n            }, this), \" \", new Date(submission.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), submission.test_results && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Test Results:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), \" \", submission.test_results.filter(tr => tr.status === 'passed').length, \" / \", submission.test_results.length, \" passed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, submission.submission_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ProblemSubmissions, \"XdWlOjRFeviaWyEQAxXwYwX9+rU=\", false, function () {\n  return [useParams];\n});\n_c = ProblemSubmissions;\nexport default ProblemSubmissions;\nvar _c;\n$RefreshReg$(_c, \"ProblemSubmissions\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","ProblemSubmissions","token","_s","problemId","allSubmissions","setAllSubmissions","submissions","setSubmissions","loading","setLoading","error","setError","filterUserId","setFilterUserId","filterStatus","setFilterStatus","filterStartDate","setFilterStartDate","filterEndDate","setFilterEndDate","fetchSubmissions","response","fetch","headers","ok","Error","status","data","json","filtered","filter","submission","user_id","toLowerCase","includes","start","Date","getTime","timestamp","end","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","className","map","to","submission_id","style","textDecoration","color","toLocaleString","test_results","tr","_c","$RefreshReg$"],"sources":["E:/NEW/frontend-for-annaforces/app/src/components/ProblemSubmissions/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nfunction ProblemSubmissions({ token }) {\n  const { problemId } = useParams();\n  const [allSubmissions, setAllSubmissions] = useState([]); // Store all fetched submissions\n  const [submissions, setSubmissions] = useState([]); // Submissions to display after filtering\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filterUserId, setFilterUserId] = useState('');\n  const [filterStatus, setFilterStatus] = useState('');\n  const [filterStartDate, setFilterStartDate] = useState('');\n  const [filterEndDate, setFilterEndDate] = useState('');\n\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/problems/${problemId}/submissions`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAllSubmissions(data); // Store all submissions\n        setSubmissions(data);    // Initially display all submissions\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (problemId && token) {\n      fetchSubmissions();\n    }\n  }, [problemId, token]);\n\n  useEffect(() => {\n    let filtered = allSubmissions;\n\n    if (filterUserId) {\n      filtered = filtered.filter(submission =>\n        submission.user_id.toLowerCase().includes(filterUserId.toLowerCase())\n      );\n    }\n\n    if (filterStatus) {\n      filtered = filtered.filter(submission =>\n        submission.status.toLowerCase() === filterStatus.toLowerCase()\n      );\n    }\n\n    if (filterStartDate) {\n      const start = new Date(filterStartDate).getTime();\n      filtered = filtered.filter(submission =>\n        new Date(submission.timestamp).getTime() >= start\n      );\n    }\n\n    if (filterEndDate) {\n      const end = new Date(filterEndDate).getTime();\n      filtered = filtered.filter(submission =>\n        new Date(submission.timestamp).getTime() <= end\n      );\n    }\n\n    setSubmissions(filtered);\n  }, [allSubmissions, filterUserId, filterStatus, filterStartDate, filterEndDate]);\n\n  if (loading) {\n    return <div>Loading submissions...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  if (submissions.length === 0) {\n    return <div>No submissions found for this problem.</div>;\n  }\n\n  return (\n    <div className=\"problem-submissions-container\">\n      <h2>Submissions for Problem: {problemId}</h2>\n      <ul>\n        {submissions.map(submission => (\n          <li key={submission.submission_id}>\n            <Link to={`/submissions/${submission.submission_id}`} style={{ textDecoration: 'none', color: 'inherit' }}>\n              <p><strong>Submission ID:</strong> {submission.submission_id}</p>\n              <p><strong>User ID:</strong> {submission.user_id}</p>\n              <p><strong>Status:</strong> {submission.status}</p>\n              {/* <p><strong>Language:</strong> {submission.language}</p> */}\n              <p><strong>Timestamp:</strong> {new Date(submission.timestamp).toLocaleString()}</p>\n              {submission.test_results && (\n                <p>\n                  <strong>Test Results:</strong> {submission.test_results.filter(tr => tr.status === 'passed').length} / {submission.test_results.length} passed\n                </p>\n              )}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ProblemSubmissions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}