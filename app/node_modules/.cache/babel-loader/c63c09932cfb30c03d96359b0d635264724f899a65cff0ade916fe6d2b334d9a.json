{"ast":null,"code":"var _jsxFileName = \"E:\\\\NEW\\\\frontend-for-annaforces\\\\app\\\\src\\\\components\\\\ProblemDetail\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// useParams hook is used to access URL parameters, in this case, the problem ID.\nimport { useParams, Link } from 'react-router-dom';\n\n/**\n * ProblemDetail Component\n * @description Displays the detailed information for a single coding problem fetched from the backend API.\n * @param {object} props - React component props. (No explicit props are used by this component).\n * @returns {JSX.Element} The JSX element representing the problem detail page.\n * @async false\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProblemDetail() {\n  _s();\n  // Extract the 'id' parameter from the URL.\n  const {\n    id\n  } = useParams();\n  // State to store the details of the single problem fetched from the API.\n  const [problem, setProblem] = useState(null);\n  // State to manage the loading status during API calls.\n  const [loading, setLoading] = useState(true);\n  // State to store any error that occurs during the API call.\n  const [error, setError] = useState(null);\n\n  // useEffect hook to perform side effects, fetching data based on the problem ID.\n  useEffect(() => {\n    /**\n     * fetchProblem\n     * @description Asynchronously fetches the details of a single problem from the backend API.\n     * @param {void} - No input parameters.\n     * @returns {void} - Updates the component's state (problem, loading, error).\n     * @async true\n     */\n    const fetchProblem = async () => {\n      try {\n        // Make an API call to fetch the details of a specific problem.\n        // The base URL is from environment variables, and the ID is from the URL parameter.\n        const response = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/problems/${id}`);\n        // Set the problem state with the data received from the API.\n        setProblem(response.data);\n      } catch (err) {\n        // Catch and set any errors that occur during the API call.\n        setError(err);\n      } finally {\n        // Set loading to false once the API call is complete, regardless of success or failure.\n        setLoading(false);\n      }\n    };\n    fetchProblem();\n  }, [id]); // Dependency array includes 'id' so the effect re-runs if the ID changes.\n\n  // Update page title once problem data is loaded\n  useEffect(() => {\n    if (problem) {\n      document.title = `Problem: ${problem.title || 'NA'}`;\n    }\n  }, [problem]);\n\n  // Display a loading message while the data is being fetched.\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading problem details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Display an error message if the API call failed.\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Display a message if no problem data is found after loading.\n  if (!problem) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Problem not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: problem.title || \"NA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this), \" \", problem.description || \"NA\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Difficulty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this), \" \", problem.difficulty || \"NA\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/problems/${id}/submissions`,\n        children: \"View Submissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: problem.statement || \"NA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Input Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: problem.input_format || \"NA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Output Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: problem.output_format || \"NA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Time Limit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: problem.time_limit || \"NA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Space Limit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: problem.space_limit || \"NA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sample Testcases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), problem.sample_testcases && problem.sample_testcases.length > 0 ? problem.sample_testcases.map((testcase, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Sample \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: testcase.input || \"NA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: testcase.output || \"NA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this), testcase.explanation && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Explanation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 32\n        }, this), \" \", testcase.explanation || \"NA\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }, this)) :\n    /*#__PURE__*/\n    // Display message if no sample testcases are available.\n    _jsxDEV(\"p\", {\n      children: \"No sample testcases available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(ProblemDetail, \"BbuOWI8wtk17/XPOI3Qkn0+cEWY=\", false, function () {\n  return [useParams];\n});\n_c = ProblemDetail;\nexport default ProblemDetail;\nvar _c;\n$RefreshReg$(_c, \"ProblemDetail\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","Link","jsxDEV","_jsxDEV","ProblemDetail","_s","id","problem","setProblem","loading","setLoading","error","setError","fetchProblem","response","get","process","env","REACT_APP_API_BASE_URL","data","err","document","title","children","fileName","_jsxFileName","lineNumber","columnNumber","message","description","difficulty","to","statement","input_format","output_format","time_limit","space_limit","sample_testcases","length","map","testcase","index","input","output","explanation","_c","$RefreshReg$"],"sources":["E:/NEW/frontend-for-annaforces/app/src/components/ProblemDetail/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// useParams hook is used to access URL parameters, in this case, the problem ID.\nimport { useParams, Link } from 'react-router-dom';\n\n/**\n * ProblemDetail Component\n * @description Displays the detailed information for a single coding problem fetched from the backend API.\n * @param {object} props - React component props. (No explicit props are used by this component).\n * @returns {JSX.Element} The JSX element representing the problem detail page.\n * @async false\n */\nfunction ProblemDetail() {\n    // Extract the 'id' parameter from the URL.\n    const { id } = useParams();\n    // State to store the details of the single problem fetched from the API.\n    const [problem, setProblem] = useState(null);\n    // State to manage the loading status during API calls.\n    const [loading, setLoading] = useState(true);\n    // State to store any error that occurs during the API call.\n    const [error, setError] = useState(null);\n\n    // useEffect hook to perform side effects, fetching data based on the problem ID.\n    useEffect(() => {\n        /**\n         * fetchProblem\n         * @description Asynchronously fetches the details of a single problem from the backend API.\n         * @param {void} - No input parameters.\n         * @returns {void} - Updates the component's state (problem, loading, error).\n         * @async true\n         */\n        const fetchProblem = async () => {\n            try {\n                // Make an API call to fetch the details of a specific problem.\n                // The base URL is from environment variables, and the ID is from the URL parameter.\n                const response = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/problems/${id}`);\n                // Set the problem state with the data received from the API.\n                setProblem(response.data);\n            } catch (err) {\n                // Catch and set any errors that occur during the API call.\n                setError(err);\n            } finally {\n                // Set loading to false once the API call is complete, regardless of success or failure.\n                setLoading(false);\n            }\n        };\n\n        fetchProblem();\n    }, [id]); // Dependency array includes 'id' so the effect re-runs if the ID changes.\n\n    // Update page title once problem data is loaded\n    useEffect(() => {\n        if (problem) {\n            document.title = `Problem: ${problem.title || 'NA'}`;\n        }\n    }, [problem]);\n\n    // Display a loading message while the data is being fetched.\n    if (loading) {\n        return <div>Loading problem details...</div>;\n    }\n\n    // Display an error message if the API call failed.\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n\n    // Display a message if no problem data is found after loading.\n    if (!problem) {\n        return <div>Problem not found.</div>;\n    }\n\n    return (\n        <div>\n            {/* Display problem title, or 'NA' if missing. */}\n            <h1>{problem.title || \"NA\"}</h1>\n            {/* Display problem description, or 'NA' if missing. */}\n            <p><strong>Description:</strong> {problem.description || \"NA\"}</p>\n            {/* Display problem difficulty, or 'NA' if missing. */}\n            <p><strong>Difficulty:</strong> {problem.difficulty || \"NA\"}</p>\n            <p><Link to={`/problems/${id}/submissions`}>View Submissions</Link></p>\n            \n            <h2>Statement</h2>\n            {/* Display problem statement, or 'NA' if missing. */}\n            <p>{problem.statement || \"NA\"}</p>\n\n            <h2>Input Format</h2>\n            {/* Display input format, or 'NA' if missing. */}\n            <p>{problem.input_format || \"NA\"}</p>\n\n            <h2>Output Format</h2>\n            {/* Display output format, or 'NA' if missing. */}\n            <p>{problem.output_format || \"NA\"}</p>\n\n            <h2>Time Limit</h2>\n            {/* Display time limit, or 'NA' if missing. */}\n            <p>{problem.time_limit || \"NA\"}</p>\n\n            <h2>Space Limit</h2>\n            {/* Display space limit, or 'NA' if missing. */}\n            <p>{problem.space_limit || \"NA\"}</p>\n\n            <h2>Sample Testcases</h2>\n            {/* Conditionally render sample testcases if available. */}\n            {problem.sample_testcases && problem.sample_testcases.length > 0 ? (\n                problem.sample_testcases.map((testcase, index) => (\n                    <div key={index}>\n                        <h3>Sample {index + 1}</h3>\n                        <p><strong>Input:</strong></p>\n                        {/* Display testcase input, or 'NA' if missing. */}\n                        <pre>{testcase.input || \"NA\"}</pre>\n                        <p><strong>Output:</strong></p>\n                        {/* Display testcase output, or 'NA' if missing. */}\n                        <pre>{testcase.output || \"NA\"}</pre>\n                        {/* Display testcase explanation if available, or 'NA' if missing. */}\n                        {testcase.explanation && (\n                            <p><strong>Explanation:</strong> {testcase.explanation || \"NA\"}</p>\n                        )}\n                    </div>\n                ))\n            ) : (\n                // Display message if no sample testcases are available.\n                <p>No sample testcases available.</p>\n            )}\n        </div>\n    );\n}\n\nexport default ProblemDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}